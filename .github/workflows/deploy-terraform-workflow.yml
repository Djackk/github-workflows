name: deploy-terraform-workflow

on:
  workflow_dispatch:
    inputs:

jobs:
  deployment_Status:
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Check Failed
        if: github.ref_type != 'tag'
        run: |
          echo "Please select a tag for the deployment"
#          exit 1
      - name: Deployment Check Passed
        if: github.ref_type == 'tag'
        run: |
          echo "Code will be deployed from the tag ${{ github.ref }}"

  config_update:
    needs:
      - deployment_Status
    runs-on: ubuntu-latest
    steps:
      - name: Install yq
        run: |
          sudo apt update
          sudo apt install snapd
          sudo snap install yq

      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{github.ref}}

      - name: Extract repos from config
        id: extract-repos
        run: |
          targets=($(yq eval .terraform.repo config/config.yml | awk '{print $2}'))
          for target in targets[@];do
            echo ${target}
          repos+="\""$target"\","
          done
          echo ${repos%?}
          echo "target_matrix=["$(echo "${repos%?}")"]" >> $GITHUB_OUTPUT
        shell: bash

      - name: Extract user email from config
        id: extract-email
        run: |
          email=$(yq eval .terraform.user_email config/config.yml)
          echo "user_email=$email" >> $GITHUB_OUTPUT
        shell: bash

      - name: Extract user name from config
        id: extract-name
        run: |
          name=$(yq eval .terraform.user_name config/config.yml)
          echo "user_name=$name" >> $GITHUB_OUTPUT
        shell: bash

      - name: Extract destination base branch from config
        id: extract-dest-base
        run: |
          base=$(yq eval .terraform.destination_base_branch config/config.yml)
          echo "dest_base=$base" >> $GITHUB_OUTPUT
        shell: bash

      - name: Temp echo
        run: |
          echo "target_matrix: ${{ steps.extract-repos.outputs.target_matrix }}"
          echo "user_email: ${{ steps.extract-email.outputs.user_email }}"
          echo "user_name: ${{ steps.extract-name.outputs.user_name }}"
          echo "dest_base: ${{ steps.extract-dest-base.outputs.dest_base }}"
        shell: bash

    outputs:
      target_matrix: ${{ steps.extract-repos.outputs.target_matrix }}
      user_email: ${{ steps.extract-email.outputs.user_email }}
      user_name: ${{ steps.extract-name.outputs.user_name }}
      dest_base: ${{ steps.extract-dest-base.outputs.dest_base }}



#  automated_pr:
#    needs:
#      - config_update
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      matrix:
#        target:  ${{fromJson(needs.config_update.outputs.target_matrix)}}
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v3
#        with:
#          ref: ${{github.ref}}
#
#      - name: Create pull request
#        uses: paygoc6/action-pull-request-another-repo@v1.0.1
#        env:
#          API_TOKEN_GITHUB: ${{ secrets.TEST_SECRET }}
#        with:
#          source_folder: 'terraform/*.yml'
#          destination_repo: ${{ matrix.target }}
#          destination_folder: '.github/workflows'
#          destination_base_branch: 'main'
#          destination_head_branch: 'CI-CD_WORKFLOWS'
#          user_email: 'siddom91@gmail.com'
#          user_name: 'Djackk'
#    outputs:
#      repository: ${{ steps.repo-check.outputs.repo }}

#  terraform:
#    needs:
#      - Config-update
#    runs-on: ubuntu-latest
#    env:
#      GOOGLE_CLOUD_PROJECT: sandbox-20220909-4sfsll
#    environment: production
#
#    defaults:
#      run:
#        shell: bash
#
#    permissions:
#      contents: 'read'

#    steps:
#    - name: terraform-deploy-dev
#      uses: Djackk/gitHub-workflows/terraform@main
#      with:
#        tag: ${{ github.ref_name }}
#        rep: ${{ needs.Config-update.outputs.repository }}

